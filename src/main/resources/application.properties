spring.profiles.active=dev

spring.application.name=notification-service

# PostgreSQL Configuration
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Twilio Configuration
twilio.account.sid=your_twilio_account_sid
twilio.auth.token=your_twilio_auth_token
twilio.from.number=your_twilio_phone_number

# SendGrid Configuration
sendgrid.api.key=your_sendgrid_api_key

# Kafka Configuration
spring.kafka.template.default-topic=notificationTopic

# Kafka Listener - how long, in milliseconds, the poll() method will block if data is not available in Kafka.
# This helps manage how often your consumer checks for new messages.
spring.kafka.listener.poll-timeout=5000

# Consumer configuration
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-interval-ms=300000
spring.kafka.consumer.max-poll-records=10

# Producer Properties
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries=0

# Set logging level for the entire application
logging.level.root=DEBUG